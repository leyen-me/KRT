// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// üêõ After adding enums to Prisma schema, if client needs to use them,
// please delete client's node_modules and reinstall dependencies

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("VITE_DATABASE_URL")
}

// sys user gender
enum SYS_USER_GENDER {
  MALE
  FEMALE
  UNKNOWN
}

// sys user status
enum SYS_USER_STATUS {
  NORMAL
  DISABLED
}

// sys user
model SysUser {
  id String @id @default(cuid())

  email      String
  password   String
  status     SYS_USER_STATUS @default(NORMAL)
  superAdmin Boolean         @default(false)

  nickname String?
  avatar   String?
  gender   SYS_USER_GENDER? @default(UNKNOWN)
  mobile   String?

  createdAt   DateTime      @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt   DateTime      @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  SysUserRole SysUserRole[]
}

// sys user token
model SysUserToken {
  id String @id @default(cuid())

  token   String
  userId  String
  expires DateTime @db.DateTime

  createdAt DateTime @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
}

// sys translation
enum SYS_TRANSLATION_TYPE {
  en
  zh_CN
}

model SysTranslation {
  id String @id @default(cuid())

  key   String
  type  SYS_TRANSLATION_TYPE @default(en)
  value String
}

// system dict
model SysDict {
  id   String @id @default(cuid())
  name String
  code String

  items SysDictItem[]
}

// system dict item
enum SYS_DICT_ITEM_VARIANT {
  default
  secondary
  destructive
  outline
}

model SysDictItem {
  id String @id @default(cuid())

  dictId  String
  name    String
  value   String
  sort    Int                   @default(1)
  variant SYS_DICT_ITEM_VARIANT @default(default)
  dict    SysDict?              @relation(fields: [dictId], references: [id])
}

// sys role
model SysRole {
  id String @id @default(cuid())

  name String
  code String
}

// sys user role
model SysUserRole {
  id String @id @default(cuid())

  userId String
  roleId String
  user   SysUser @relation(fields: [userId], references: [id])
}
